- name:
  hosts: substrate_nodes

  tasks:
    - name: Install apt dependencies
      become: true
      become_user: root
      ansible.builtin.apt:
        update_cache: true
        pkg:
          - git
          - clang
          - curl
          - libssl-dev
          - llvm
          - libudev-dev
          - make
          - protobuf-compiler
          - wget
          - vim

    - name: Install rust
      ansible.builtin.shell: |
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
        . $HOME/.cargo/env
        rustup default stable
        rustup update
        rustup update nightly
        rustup target add wasm32-unknown-unknown --toolchain nightly
      register: rust_install_output

    - name: Print rust installation output
      ansible.builtin.debug:
        msg: "{{ rust_install_output.stdout_lines }}"

    - name: Compile substrate node
      ansible.builtin.shell: |
        . $HOME/.cargo/env
        git clone https://github.com/substrate-developer-hub/substrate-node-template
        cd substrate-node-template
        cargo build --release
      register: substrate_compile_output

    - name: Print substrate compilation output
      ansible.builtin.debug:
        msg: "{{ substrate_compile_output.stdout_lines }}"

  post_tasks:
    - name: Enable systemd linger for {{ ansible_user }} user
      become: true
      become_user: root
      ansible.builtin.shell: |
        loginctl enable-linger {{ ansible_user }}

    - name: Create {{ ansible_user }} user systemd directory
      ansible.builtin.file:
        state: directory
        path: /home/{{ ansible_user }}/.config/systemd/user

    - name: Install systemd service
      ansible.builtin.template:
        src: substrate_node.service.j2
        dest: /home/{{ ansible_user }}/.config/systemd/user/substrate_node.service

    - name: Start substrate_node service
      ansible.builtin.systemd:
        scope: user
        state: started
        daemon_reload: true
        enabled: true
        name: substrate_node
